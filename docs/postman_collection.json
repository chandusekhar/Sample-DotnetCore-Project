{
	"info": {
		"_postman_id": "4c2408ca-5d40-4482-8da8-49de947d87b1",
		"name": "Mercury Access Admin Backend API",
		"description": "Backend REST api for core access control administrator app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "securityquestion",
					"item": [
						{
							"name": "Updates the security question and answer",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOnRydWV9IiwibmJmIjoxNTkxOTgyNzM5LCJleHAiOjE1OTI1ODc1MzksImlhdCI6MTU5MTk4MjczOX0.udk4LsdKJPaHQWT7Ic02JNcYmvoC094_HImN2uKCpI4",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"question\": \"asdasd\",\n    \"answer\": \"asd\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/securityquestion",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"auth",
										"securityquestion"
									]
								}
							},
							"response": [
								{
									"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Error message\"\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Error message\"\n}"
								}
							]
						},
						{
							"name": "Get user's security question",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOnRydWV9IiwibmJmIjoxNTkxOTgyNzM5LCJleHAiOjE1OTI1ODc1MzksImlhdCI6MTU5MTk4MjczOX0.udk4LsdKJPaHQWT7Ic02JNcYmvoC094_HImN2uKCpI4",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/securityquestion?email=nowsha3@lexu4g.com",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"auth",
										"securityquestion"
									],
									"query": [
										{
											"key": "email",
											"value": "nowsha3@lexu4g.com",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion?email=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											],
											"query": [
												{
													"key": "email",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Error message\"\n}"
								},
								{
									"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion?email=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											],
											"query": [
												{
													"key": "email",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Error message\"\n}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion?email=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											],
											"query": [
												{
													"key": "email",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"question\": \"<string>\"\n}"
								},
								{
									"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/securityquestion?email=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"auth",
												"securityquestion"
											],
											"query": [
												{
													"key": "email",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Error message\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Registers a new admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"nowsha3@lexu4g.com\",\n    \"password\": \"123456\",\n    \"securityQuestion\": \"qwe\",\n    \"securityQuestionAnswer\": \"asdasd\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/register",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/register",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/register",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/register",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						}
					]
				},
				{
					"name": "Verifies the email of user registering",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/verifyEmail?token=371af191-4713-40d0-9e0c-eae120b4ca9c&update=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"auth",
								"verifyEmail"
							],
							"query": [
								{
									"key": "token",
									"value": "371af191-4713-40d0-9e0c-eae120b4ca9c",
									"description": "(Required) the verification token"
								},
								{
									"key": "update",
									"value": "false",
									"description": "the flag whether email is updated or is first verification"
								}
							]
						}
					},
					"response": [
						{
							"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/verifyEmail?token=b8ac4fcb-75b2-4e7b-a3ed-f32f95980120&update=false",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"verifyEmail"
									],
									"query": [
										{
											"key": "token",
											"value": "b8ac4fcb-75b2-4e7b-a3ed-f32f95980120"
										},
										{
											"key": "update",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/verifyEmail?token=b8ac4fcb-75b2-4e7b-a3ed-f32f95980120&update=false",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"verifyEmail"
									],
									"query": [
										{
											"key": "token",
											"value": "b8ac4fcb-75b2-4e7b-a3ed-f32f95980120"
										},
										{
											"key": "update",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/verifyEmail?token=b8ac4fcb-75b2-4e7b-a3ed-f32f95980120&update=false",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"verifyEmail"
									],
									"query": [
										{
											"key": "token",
											"value": "b8ac4fcb-75b2-4e7b-a3ed-f32f95980120"
										},
										{
											"key": "update",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Authenticate an admin into the system",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"nowsha3@lexu4g.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Login response model",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/login",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"ect2123234234dywer423.sht\"\n}"
						},
						{
							"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/login",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/login",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						}
					]
				},
				{
					"name": "Sends temporary password, user should ask to change password on first login with temporary password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"nowsha3@lexu4g.com\",\n    \"securityQuestion\": \"asdasd\",\n    \"securityQuestionReply\": \"asd\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/forgotPassword",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"auth",
								"forgotPassword"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/forgotPassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"forgotPassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/forgotPassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"forgotPassword"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/forgotPassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"forgotPassword"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						}
					]
				},
				{
					"name": "Updates the password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOnRydWV9IiwibmJmIjoxNTkxOTgyNzM5LCJleHAiOjE1OTI1ODc1MzksImlhdCI6MTU5MTk4MjczOX0.udk4LsdKJPaHQWT7Ic02JNcYmvoC094_HImN2uKCpI4",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"123456\"",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}/auth/changePassword",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"auth",
								"changePassword"
							]
						}
					},
					"response": [
						{
							"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/changePassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"changePassword"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/changePassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"changePassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/changePassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"changePassword"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//auth/changePassword",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"auth",
										"changePassword"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "location",
			"item": [
				{
					"name": "{location Id}",
					"item": [
						{
							"name": "accounts/profile",
							"item": [
								{
									"name": "Returns administrator's profile based on the location and admin id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MTk5NDc4NCwiZXhwIjoxNTkyNTk5NTg0LCJpYXQiOjE1OTE5OTQ3ODR9.0ixzQvm0f8xog5lXjhPL3xwMgj1jsDA7SusaFqJ3800",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/accounts/profile",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"accounts",
												"profile"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"type": "string",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "User profile response model",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<integer>\",\n \"locationId\": \"<integer>\",\n \"name\": \"<string>\",\n \"email\": \"<string>\",\n \"toolkitInfo\": {\n  \"id\": \"<long>\",\n  \"keySerialNumber\": \"<string>\",\n  \"pin\": \"<number>\"\n }\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								},
								{
									"name": "Updates administrator's profile, only allow to update his own profile, if email is changed should send the email verification email.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MTk5NDc4NCwiZXhwIjoxNTkyNTk5NTg0LCJpYXQiOjE1OTE5OTQ3ODR9.0ixzQvm0f8xog5lXjhPL3xwMgj1jsDA7SusaFqJ3800",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Nowshad\",\n    \"email\": \"nowshad2@lexu4g.com\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/accounts/profile",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"accounts",
												"profile"
											],
											"variable": [
												{
													"description": "(Required) the currently selected location id",
													"key": "locationId",
													"type": "string",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "User profile response model",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<integer>\",\n \"locationId\": \"<integer>\",\n \"name\": \"<string>\",\n \"email\": \"<string>\",\n \"toolkitInfo\": {\n  \"id\": \"<long>\",\n  \"keySerialNumber\": \"<string>\",\n  \"pin\": \"<number>\"\n }\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accounts/profile",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accounts",
														"profile"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "access History",
							"item": [
								{
									"name": "/location/:locationId/accessHistory",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/accessHistory?skips=0&takes=10",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"accessHistory"
											],
											"query": [
												{
													"key": "keySerialNumber",
													"value": "<string>",
													"description": "the key serial number",
													"disabled": true
												},
												{
													"key": "deviceSerialNumber",
													"value": "<string>",
													"description": "the device serial number",
													"disabled": true
												},
												{
													"key": "tranDateStart",
													"value": "<date>",
													"description": "the start transaction date",
													"disabled": true
												},
												{
													"key": "tranDateEnd",
													"value": "<date>",
													"description": "the end transaction date",
													"disabled": true
												},
												{
													"key": "entryDateStart",
													"value": "<date>",
													"description": "the start  entry date",
													"disabled": true
												},
												{
													"key": "entryDateSEnd",
													"value": "<date>",
													"description": "the end entry date",
													"disabled": true
												},
												{
													"key": "operationCode",
													"value": "<string>",
													"description": "the operation code",
													"disabled": true
												},
												{
													"key": "deviceName",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "skips",
													"value": "0"
												},
												{
													"key": "takes",
													"value": "10",
													"description": "the default value should be configurable"
												},
												{
													"key": "orderBy",
													"value": "<string>",
													"description": "the order by column name",
													"disabled": true
												},
												{
													"key": "orderDirection",
													"value": "<string>",
													"description": "Sort order:\n * `ASC` - Ascending, from A to Z\n * `DESC` - Descending, from Z to A\n",
													"disabled": true
												}
											],
											"variable": [
												{
													"description": "(Required) the currently selected location id",
													"key": "locationId",
													"type": "string",
													"value": "292"
												}
											]
										}
									},
									"response": [
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "User profile response model",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"totalItems\": \"<integer>\",\n \"items\": [\n  {\n   \"transDate\": \"<date>\",\n   \"deviceNameID\": \"<integer>\",\n   \"deviceName\": \"<string>\",\n   \"deviceSerialNumber\": \"<number>\",\n   \"keySerialNumber\": \"<string>\",\n   \"keyHolderName\": \"<string>\",\n   \"OperationCode\": \"<string>\",\n   \"operationDescription\": \"<string>\",\n   \"operationState\": \"<string>\",\n   \"operationErrorCode\": \"<string>\",\n   \"errorCodeText\": \"<string>\",\n   \"errorSolutionText\": \"<string>\"\n  },\n  {\n   \"transDate\": \"<date>\",\n   \"deviceNameID\": \"<integer>\",\n   \"deviceName\": \"<string>\",\n   \"deviceSerialNumber\": \"<number>\",\n   \"keySerialNumber\": \"<string>\",\n   \"keyHolderName\": \"<string>\",\n   \"OperationCode\": \"<string>\",\n   \"operationDescription\": \"<string>\",\n   \"operationState\": \"<string>\",\n   \"operationErrorCode\": \"<string>\",\n   \"errorCodeText\": \"<string>\",\n   \"errorSolutionText\": \"<string>\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "/location/:locationId/accessHistory/export",
									"request": {
										"auth": {
											"type": "bearer"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory/export?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&type=<string>&orderBy=<string>&orderDirection=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"location",
												":locationId",
												"accessHistory",
												"export"
											],
											"query": [
												{
													"key": "keySerialNumber",
													"value": "<string>",
													"description": "the key serial number"
												},
												{
													"key": "deviceSerialNumber",
													"value": "<string>",
													"description": "the device serial number"
												},
												{
													"key": "tranDateStart",
													"value": "<date>",
													"description": "the start transaction date"
												},
												{
													"key": "tranDateEnd",
													"value": "<date>",
													"description": "the end transaction date"
												},
												{
													"key": "entryDateStart",
													"value": "<date>",
													"description": "the start  entry date"
												},
												{
													"key": "entryDateSEnd",
													"value": "<date>",
													"description": "the end entry date"
												},
												{
													"key": "operationCode",
													"value": "<string>",
													"description": "the operation code"
												},
												{
													"key": "deviceName",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "the export type, for now only excel will be supported. If other type is received throw 400"
												},
												{
													"key": "orderBy",
													"value": "<string>",
													"description": "the order by column name"
												},
												{
													"key": "orderDirection",
													"value": "<string>",
													"description": "Sort order:\n * `ASC` - Ascending, from A to Z\n * `DESC` - Descending, from Z to A\n"
												}
											],
											"variable": [
												{
													"key": "version",
													"value": "{{version}}",
													"description": "api version"
												},
												{
													"key": "locationId",
													"value": "<long>",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory/export?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory",
														"export"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory/export?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory",
														"export"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory/export?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory",
														"export"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory/export?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory",
														"export"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "The binary file",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/accessHistory/export?keySerialNumber=<string>&deviceSerialNumber=<string>&tranDateStart=<date>&tranDateEnd=<date>&entryDateStart=<date>&entryDateSEnd=<date>&operationCode=<string>&deviceName=<string>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"accessHistory",
														"export"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<string>"
														},
														{
															"key": "tranDateStart",
															"value": "<date>"
														},
														{
															"key": "tranDateEnd",
															"value": "<date>"
														},
														{
															"key": "entryDateStart",
															"value": "<date>"
														},
														{
															"key": "entryDateSEnd",
															"value": "<date>"
														},
														{
															"key": "operationCode",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Disposition",
													"value": "attachment; filename=filename.xlsx",
													"description": "the content dispostion."
												},
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<binary>"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "administrators",
							"item": [
								{
									"name": "{administrator Id}",
									"item": [
										{
											"name": "Updates the administrator.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"user3\",\n    \"email\": \"user3@lexu4g.com\",\n    \"keySerialNumber\": \"1234\",\n    \"state\": 4,\n    \"disabledReason\": \"<string>\",\n    \"permissions\": {\n        \"HasAdminRead\": true,\n        \"HasKeyholderRead\": true,\n        \"HasDeviceRead\": true,\n        \"HasSpaceRead\": true,\n        \"HasConfigRead\": true\n    },\n    \"status\": {\n        \"id\": 1,\n        \"name\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/administrators/:administratorId",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"location",
														":locationId",
														"administrators",
														":administratorId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "1",
															"description": "(Required) the currently selected location id"
														},
														{
															"key": "administratorId",
															"value": "12",
															"description": "(Required) The administrator id"
														}
													]
												}
											},
											"response": [
												{
													"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"email\": \"<string>\",\n \"state\": \"<string>\",\n \"disabledReason\": \"<string>\",\n \"status\": {\n  \"id\": 1,\n  \"name\": \"value1\"\n },\n \"toolkitInfo\": {\n  \"id\": \"<long>\",\n  \"keySerialNumber\": \"<string>\",\n  \"pin\": \"<number>\"\n },\n \"permissions\": {\n  \"HasAdminRead\": \"<boolean>\",\n  \"HasAdminWrite\": \"<boolean>\",\n  \"HasKeyholderRead\": \"<boolean>\",\n  \"HasKeyholderWrite\": \"<boolean>\",\n  \"HasDeviceRead\": \"<boolean>\",\n  \"HasDeviceWrite\": \"<boolean>\",\n  \"HasSpaceRead\": \"<boolean>\",\n  \"HasSpaceWrite\": \"<boolean>\",\n  \"HasConfigRead\": \"<boolean>\",\n  \"HasConfigWrite\": \"<boolean>\"\n },\n \"recentActivity\": {\n  \"id\": \"<number>\",\n  \"activityText\": \"<string>\",\n  \"activityTime\": \"<date>\"\n }\n}"
												},
												{
													"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												}
											]
										},
										{
											"name": "Delete the administrator. Set the state to 'Inactive'",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/administrators/:administratorId",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"location",
														":locationId",
														"administrators",
														":administratorId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "1",
															"description": "(Required) the currently selected location id"
														},
														{
															"key": "administratorId",
															"value": "12",
															"description": "(Required) The administrator id"
														}
													]
												}
											},
											"response": [
												{
													"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId"
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Search administrator's activities.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/administrators/:administratorId/activities?skips=0&takes=10&orderBy=activitytext",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"location",
														":locationId",
														"administrators",
														":administratorId",
														"activities"
													],
													"query": [
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10",
															"description": "the default value should be configurable"
														},
														{
															"key": "orderBy",
															"value": "activitytext",
															"description": "the order by column name"
														},
														{
															"key": "orderDirection",
															"value": "<string>",
															"description": "Sort order:\n * `ASC` - Ascending, from A to Z\n * `DESC` - Descending, from Z to A\n",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "locationId",
															"value": "1",
															"description": "(Required) the currently selected location id"
														},
														{
															"key": "administratorId",
															"value": "12",
															"description": "(Required) The administrator id"
														}
													]
												}
											},
											"response": [
												{
													"name": "Administrator's activity search result response model",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/:administratorId/activities?skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"administrators",
																":administratorId",
																"activities"
															],
															"query": [
																{
																	"key": "skips",
																	"value": "0"
																},
																{
																	"key": "takes",
																	"value": "10"
																},
																{
																	"key": "orderBy",
																	"value": "<string>"
																},
																{
																	"key": "orderDirection",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "administratorId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"totalItems\": \"<integer>\",\n \"items\": [\n  {\n   \"id\": \"<number>\",\n   \"activityText\": \"<string>\",\n   \"activityTime\": \"<date>\"\n  },\n  {\n   \"id\": \"<number>\",\n   \"activityText\": \"<string>\",\n   \"activityTime\": \"<date>\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Perform administrators search",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/administrators?skips=0&takes=10&orderBy=name",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"administrators"
											],
											"query": [
												{
													"key": "onlyToolKitUser",
													"value": "true",
													"disabled": true
												},
												{
													"key": "id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "name",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "email",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "state",
													"value": "1",
													"disabled": true
												},
												{
													"key": "statusId",
													"value": "1",
													"disabled": true
												},
												{
													"key": "skips",
													"value": "0"
												},
												{
													"key": "takes",
													"value": "10",
													"description": "the default value should be configurable"
												},
												{
													"key": "orderBy",
													"value": "name",
													"description": "the order by column name"
												},
												{
													"key": "orderDirection",
													"value": "<string>",
													"description": "Sort order:\n * `ASC` - Ascending, from A to Z\n * `DESC` - Descending, from Z to A\n",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "Administrator search result response model",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"totalItems\": \"<integer>\",\n \"items\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"email\": \"<string>\",\n   \"state\": \"<string>\",\n   \"disabledReason\": \"<string>\",\n   \"status\": {\n    \"id\": 1,\n    \"name\": \"value1\"\n   },\n   \"toolkitInfo\": {\n    \"id\": \"<long>\",\n    \"keySerialNumber\": \"<string>\",\n    \"pin\": \"<number>\"\n   },\n   \"permissions\": {\n    \"HasAdminRead\": \"<boolean>\",\n    \"HasAdminWrite\": \"<boolean>\",\n    \"HasKeyholderRead\": \"<boolean>\",\n    \"HasKeyholderWrite\": \"<boolean>\",\n    \"HasDeviceRead\": \"<boolean>\",\n    \"HasDeviceWrite\": \"<boolean>\",\n    \"HasSpaceRead\": \"<boolean>\",\n    \"HasSpaceWrite\": \"<boolean>\",\n    \"HasConfigRead\": \"<boolean>\",\n    \"HasConfigWrite\": \"<boolean>\"\n   },\n   \"recentActivity\": {\n    \"id\": \"<number>\",\n    \"activityText\": \"<string>\",\n    \"activityTime\": \"<date>\"\n   }\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"email\": \"<string>\",\n   \"state\": \"<string>\",\n   \"disabledReason\": \"<string>\",\n   \"status\": {\n    \"id\": 1,\n    \"name\": \"value1\"\n   },\n   \"toolkitInfo\": {\n    \"id\": \"<long>\",\n    \"keySerialNumber\": \"<string>\",\n    \"pin\": \"<number>\"\n   },\n   \"permissions\": {\n    \"HasAdminRead\": \"<boolean>\",\n    \"HasAdminWrite\": \"<boolean>\",\n    \"HasKeyholderRead\": \"<boolean>\",\n    \"HasKeyholderWrite\": \"<boolean>\",\n    \"HasDeviceRead\": \"<boolean>\",\n    \"HasDeviceWrite\": \"<boolean>\",\n    \"HasSpaceRead\": \"<boolean>\",\n    \"HasSpaceWrite\": \"<boolean>\",\n    \"HasConfigRead\": \"<boolean>\",\n    \"HasConfigWrite\": \"<boolean>\"\n   },\n   \"recentActivity\": {\n    \"id\": \"<number>\",\n    \"activityText\": \"<string>\",\n    \"activityTime\": \"<date>\"\n   }\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Invites an administrators to the current location, if email address exists then just add location mapping else also send email invitation. This user don't need to verify email.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"user1\",\n    \"email\": \"user1@lexu4g.com\",\n    \"keySerialNumber\": \"1\"\n}"
										},
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/administrators",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"administrators"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<integer>\",\n \"name\": \"<string>\",\n \"email\": \"<string>\",\n \"state\": \"<string>\",\n \"disabledReason\": \"<string>\",\n \"status\": {\n  \"id\": 1,\n  \"name\": \"value1\"\n },\n \"toolkitInfo\": {\n  \"id\": \"<long>\",\n  \"keySerialNumber\": \"<string>\",\n  \"pin\": \"<number>\"\n },\n \"permissions\": {\n  \"HasAdminRead\": \"<boolean>\",\n  \"HasAdminWrite\": \"<boolean>\",\n  \"HasKeyholderRead\": \"<boolean>\",\n  \"HasKeyholderWrite\": \"<boolean>\",\n  \"HasDeviceRead\": \"<boolean>\",\n  \"HasDeviceWrite\": \"<boolean>\",\n  \"HasSpaceRead\": \"<boolean>\",\n  \"HasSpaceWrite\": \"<boolean>\",\n  \"HasConfigRead\": \"<boolean>\",\n  \"HasConfigWrite\": \"<boolean>\"\n },\n \"recentActivity\": {\n  \"id\": \"<number>\",\n  \"activityText\": \"<string>\",\n  \"activityTime\": \"<date>\"\n }\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								},
								{
									"name": "Exports the administrators in the given format file.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/administrators/export?onlyToolKitUser=true&id=1&name=<string>&email=<string>&state=1&statusId=1&type=excel&orderBy=<string>&orderDirection=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"administrators",
												"export"
											],
											"query": [
												{
													"key": "onlyToolKitUser",
													"value": "true"
												},
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "state",
													"value": "1"
												},
												{
													"key": "statusId",
													"value": "1"
												},
												{
													"key": "type",
													"value": "excel",
													"description": "the export type, for now only excel will be supported. If other type is received throw 400"
												},
												{
													"key": "orderBy",
													"value": "<string>",
													"description": "the order by column name"
												},
												{
													"key": "orderDirection",
													"value": "<string>",
													"description": "Sort order:\n * `ASC` - Ascending, from A to Z\n * `DESC` - Descending, from Z to A\n"
												}
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/export?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators",
														"export"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/export?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators",
														"export"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/export?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators",
														"export"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "The binary file",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/export?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators",
														"export"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Disposition",
													"value": "attachment; filename=filename.xlsx",
													"description": "the content dispostion."
												},
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<binary>"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/administrators/export?onlyToolKitUser=<boolean>&id=<string>&name=<string>&email=<string>&state=<integer>&statusId=<integer>&type=<string>&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"administrators",
														"export"
													],
													"query": [
														{
															"key": "onlyToolKitUser",
															"value": "<boolean>"
														},
														{
															"key": "id",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "type",
															"value": "<string>"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "keyholder",
							"item": [
								{
									"name": "Search the keyholders",
									"request": {
										"auth": {
											"type": "bearer"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/keyholder?keySerialNumber=<string>&name=<string>&email=<string>&pin=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"",
												"location",
												":locationId",
												"keyholder"
											],
											"query": [
												{
													"key": "keySerialNumber",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "pin",
													"value": "<string>"
												},
												{
													"key": "state",
													"value": "<integer>"
												},
												{
													"key": "statusId",
													"value": "<integer>"
												},
												{
													"key": "skips",
													"value": "0"
												},
												{
													"key": "takes",
													"value": "10",
													"description": "the default value should be configurable"
												},
												{
													"key": "orderBy",
													"value": "<string>",
													"description": "the order by column name"
												},
												{
													"key": "orderDirection",
													"value": "<string>",
													"description": "Sort order:\n * `ASC` - Ascending, from A to Z\n * `DESC` - Descending, from Z to A\n"
												}
											],
											"variable": [
												{
													"key": "version",
													"value": "{{version}}",
													"description": "api version"
												},
												{
													"key": "locationId",
													"value": "<long>",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/keyholder?keySerialNumber=<string>&name=<string>&email=<string>&pin=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"keyholder"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "pin",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/keyholder?keySerialNumber=<string>&name=<string>&email=<string>&pin=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"keyholder"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "pin",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "Keholder search result response model",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/keyholder?keySerialNumber=<string>&name=<string>&email=<string>&pin=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"keyholder"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "pin",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"totalItems\": \"<integer>\",\n \"items\": [\n  {\n   \"id\": \"<long>\",\n   \"keySerialNumber\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"allowPinReleaseShackle\": \"<boolean>\",\n   \"Description\": \"<string>\",\n   \"pin\": \"<string>\",\n   \"enabled\": \"<boolean>\",\n   \"disabledReason\": \"<string>\",\n   \"enableDebugging\": \"<boolean>\",\n   \"payload\": \"<string>\",\n   \"state\": \"<string>\",\n   \"status\": {\n    \"id\": 1,\n    \"name\": \"value1\"\n   },\n   \"associatedSpaces\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": {\n     \"id\": 1,\n     \"name\": \"value1\"\n    }\n   },\n   \"associatedDevices\": {\n    \"id\": \"<long>\",\n    \"serialNumber\": \"<integer>\",\n    \"DeviceName_ID\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": {\n     \"id\": 1,\n     \"name\": \"value1\"\n    }\n   }\n  },\n  {\n   \"id\": \"<long>\",\n   \"keySerialNumber\": \"<integer>\",\n   \"name\": \"<string>\",\n   \"allowPinReleaseShackle\": \"<boolean>\",\n   \"Description\": \"<string>\",\n   \"pin\": \"<string>\",\n   \"enabled\": \"<boolean>\",\n   \"disabledReason\": \"<string>\",\n   \"enableDebugging\": \"<boolean>\",\n   \"payload\": \"<string>\",\n   \"state\": \"<string>\",\n   \"status\": {\n    \"id\": 1,\n    \"name\": \"value1\"\n   },\n   \"associatedSpaces\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": {\n     \"id\": 1,\n     \"name\": \"value1\"\n    }\n   },\n   \"associatedDevices\": {\n    \"id\": \"<long>\",\n    \"serialNumber\": \"<integer>\",\n    \"DeviceName_ID\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": {\n     \"id\": 1,\n     \"name\": \"value1\"\n    }\n   }\n  }\n ]\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/keyholder?keySerialNumber=<string>&name=<string>&email=<string>&pin=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"keyholder"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "pin",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/keyholder?keySerialNumber=<string>&name=<string>&email=<string>&pin=<string>&state=<integer>&statusId=<integer>&skips=0&takes=10&orderBy=<string>&orderDirection=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"keyholder"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "pin",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<integer>"
														},
														{
															"key": "statusId",
															"value": "<integer>"
														},
														{
															"key": "skips",
															"value": "0"
														},
														{
															"key": "takes",
															"value": "10"
														},
														{
															"key": "orderBy",
															"value": "<string>"
														},
														{
															"key": "orderDirection",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "config/statuses",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "updates existing status for given type and location, only one item should be IsDefault for a type and location. If current item is set to default then update all other to false for given type and location.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"isDefault\": false\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/config/statuses/:id?type=Device",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"location",
														":locationId",
														"config",
														"statuses",
														":id"
													],
													"query": [
														{
															"key": "type",
															"value": "Device",
															"description": "(Required) type of config"
														}
													],
													"variable": [
														{
															"key": "locationId",
															"value": "1",
															"type": "string",
															"description": "(Required) the currently selected location id"
														},
														{
															"key": "id",
															"value": "2",
															"type": "string",
															"description": "(Required) the id of status"
														}
													]
												}
											},
											"response": [
												{
													"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "NOT FOUND - if the resource in request did not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"<number>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"isDefault\": false,\n \"isActive\": \"<boolean>\"\n}"
												},
												{
													"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												}
											]
										},
										{
											"name": "deletes existing status for given type and location, set the isActive to false",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/config/statuses/:id?type=Device",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"location",
														":locationId",
														"config",
														"statuses",
														":id"
													],
													"query": [
														{
															"key": "type",
															"value": "Device",
															"description": "(Required) type of config"
														}
													],
													"variable": [
														{
															"key": "locationId",
															"value": "1",
															"description": "(Required) the currently selected location id"
														},
														{
															"key": "id",
															"value": "2",
															"description": "(Required) the id of status"
														}
													]
												}
											},
											"response": [
												{
													"name": "NOT FOUND - if the resource in request did not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"Error message\"\n}"
												},
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses/:id?type=<string>",
															"protocol": "https",
															"host": [
																"localhost"
															],
															"port": "ver{{port}}",
															"path": [
																"api",
																"ver{{version}}",
																"",
																"location",
																":locationId",
																"config",
																"statuses",
																":id"
															],
															"query": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "locationId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "gets the status based on type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/config/statuses?isFull=true&type=Device",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"config",
												"statuses"
											],
											"query": [
												{
													"key": "isFull",
													"value": "true",
													"description": "If isFull is true then returns full entity for else return id and name as lookupentity"
												},
												{
													"key": "type",
													"value": "Device",
													"description": "(Required) type of config"
												}
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "if isFull is true then ConfigurationStatus else LookupEntity",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?isFull=<boolean>&type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "isFull",
															"value": "<boolean>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 1,\n \"name\": \"value1\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?isFull=<boolean>&type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "isFull",
															"value": "<boolean>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?isFull=<boolean>&type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "isFull",
															"value": "<boolean>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?isFull=<boolean>&type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "isFull",
															"value": "<boolean>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								},
								{
									"name": "creates new status for given type and location, only one item should be IsDefault for a type and location. If current item is set to default then update all other to false for given type and location.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJOb3dzaGFkXCIsXCJMb2NhdGlvbklkc1wiOlsxXSxcIlBlcm1pc3Npb25zXCI6W3tcIkxvY2F0aW9uSWRcIjoxLFwiSGFzQWRtaW5SZWFkXCI6dHJ1ZSxcIkhhc0FkbWluRWRpdFwiOnRydWUsXCJIYXNLZXlob2xkZXJSZWFkXCI6dHJ1ZSxcIkhhc0tleWhvbGRlckVkaXRcIjp0cnVlLFwiSGFzRGV2aWNlUmVhZFwiOnRydWUsXCJIYXNEZXZpY2VFZGl0XCI6dHJ1ZSxcIkhhc1NwYWNlUmVhZFwiOnRydWUsXCJIYXNTcGFjZUVkaXRcIjp0cnVlLFwiSGFzQ29uZmlnUmVhZFwiOnRydWUsXCJIYXNDb25maWdFZGl0XCI6dHJ1ZX1dLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MjA0ODY3NCwiZXhwIjoxNTkyNjUzNDc0LCJpYXQiOjE1OTIwNDg2NzR9._SzIAHZLY_skpcTnnTiW3IoFjRJfK3-j105UKjajETY",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>3\",\n    \"description\": \"<string>3\",\n    \"isDefault\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/config/statuses?type=Device",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"config",
												"statuses"
											],
											"query": [
												{
													"key": "type",
													"value": "Device",
													"description": "(Required) type of config"
												}
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"type": "string",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<number>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"isDefault\": false,\n \"isActive\": \"<boolean>\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/config/statuses?type=<string>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"config",
														"statuses"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "auth Code",
							"item": [
								{
									"name": "generates the authentication code for Key or device, either keySerial number or device serial number is required",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MTk5NDc4NCwiZXhwIjoxNTkyNTk5NTg0LCJpYXQiOjE1OTE5OTQ3ODR9.0ixzQvm0f8xog5lXjhPL3xwMgj1jsDA7SusaFqJ3800",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/authCode?keySerialNumber=50062584",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"authCode"
											],
											"query": [
												{
													"key": "keySerialNumber",
													"value": "50062584",
													"description": "the Key serial number"
												},
												{
													"key": "deviceSerialNumber",
													"value": "<integer>",
													"description": "the device serial number",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"type": "string",
													"description": "(Required) the currently selected location id"
												}
											]
										}
									},
									"response": [
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode?keySerialNumber=<integer>&deviceSerialNumber=<integer>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<integer>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "the authentication code result",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode?keySerialNumber=<integer>&deviceSerialNumber=<integer>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<integer>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<string>\"\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode?keySerialNumber=<integer>&deviceSerialNumber=<integer>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<integer>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode?keySerialNumber=<integer>&deviceSerialNumber=<integer>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<integer>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode?keySerialNumber=<integer>&deviceSerialNumber=<integer>",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"query": [
														{
															"key": "keySerialNumber",
															"value": "<integer>"
														},
														{
															"key": "deviceSerialNumber",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								},
								{
									"name": "sends the authentication code email, send the email to currently logged in user.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5vd3NoYTNAbGV4dTRnLmNvbSIsIkRhdGEiOiJ7XCJFbWFpbFwiOlwibm93c2hhM0BsZXh1NGcuY29tXCIsXCJJZFwiOjksXCJOYW1lXCI6XCJub3dzaGEzQGxleHU0Zy5jb21cIixcIkxvY2F0aW9uSWRzXCI6W10sXCJQZXJtaXNzaW9uc1wiOltdLFwiSXNMb2dnZWRJblwiOmZhbHNlfSIsIm5iZiI6MTU5MTk5NDc4NCwiZXhwIjoxNTkyNTk5NTg0LCJpYXQiOjE1OTE5OTQ3ODR9.0ixzQvm0f8xog5lXjhPL3xwMgj1jsDA7SusaFqJ3800",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"TMPOLG4FVLUUHIXKUFRJNCK33E\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "https://localhost:{{port}}/api/ver{{version}}/location/:locationId/authCode",
											"protocol": "https",
											"host": [
												"localhost"
											],
											"port": "ver{{port}}",
											"path": [
												"api",
												"ver{{version}}",
												"location",
												":locationId",
												"authCode"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "1",
													"type": "string"
												}
											]
										}
									},
									"response": [
										{
											"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										},
										{
											"name": "the authentication code result",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": \"<string>\"\n}"
										},
										{
											"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "https://localhost:{{port}}/api/ver{{version}}//location/:locationId/authCode",
													"protocol": "https",
													"host": [
														"localhost"
													],
													"port": "ver{{port}}",
													"path": [
														"api",
														"ver{{version}}",
														"",
														"location",
														":locationId",
														"authCode"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"message\": \"Error message\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Returns list of locations that current user has permission",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}//location",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"",
								"location"
							],
							"variable": [
								{
									"key": "version",
									"value": "{{version}}",
									"description": "api version"
								}
							]
						}
					},
					"response": [
						{
							"name": "NOT AUTHORIZED - if the request didn't bear authentication information or the authentication information is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//location",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"location"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "FORBIDDEN - if the requester doesn't allow to access the resource",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//location",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"location"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "Locations response model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//location",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"location"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"name\": \"value1\"\n },\n {\n  \"id\": 1,\n  \"name\": \"value1\"\n }\n]"
						},
						{
							"name": "BAD REQUEST - if there was problem with the request (e.g. malformed or some parameters are missing).",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//location",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"location"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						},
						{
							"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:{{port}}/api/ver{{version}}//location",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "ver{{port}}",
									"path": [
										"api",
										"ver{{version}}",
										"",
										"location"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Error message\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gets the states based on type",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:{{port}}/api/ver{{version}}//lookups/states?type=<string>",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "ver{{port}}",
					"path": [
						"api",
						"ver{{version}}",
						"",
						"lookups",
						"states"
					],
					"query": [
						{
							"key": "type",
							"value": "<string>",
							"description": "(Required) type of config"
						}
					],
					"variable": [
						{
							"key": "version",
							"value": "{{version}}",
							"description": "api version"
						}
					]
				}
			},
			"response": [
				{
					"name": "INTERNAL SERVER ERROR - if the request was properly formatted, but the operation failed on the server side",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}//lookups/states?type=<string>",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"",
								"lookups",
								"states"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"Error message\"\n}"
				},
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:{{port}}/api/ver{{version}}//lookups/states?type=<string>",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "ver{{port}}",
							"path": [
								"api",
								"ver{{version}}",
								"",
								"lookups",
								"states"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "version",
			"key": "version",
			"value": "1",
			"type": "any",
			"description": {
				"content": "api version",
				"type": "text/plain"
			}
		},
		{
			"id": "port",
			"key": "port",
			"value": "5001",
			"type": "any",
			"description": {
				"content": "api version",
				"type": "text/plain"
			}
		},
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://localhost:{{port}}/api/ver{{version}}/",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}